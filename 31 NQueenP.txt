import java.io.*;
import java.util.*;

public class Main {
    
    public static int[][] dir = {{0,-1},{-1,-1},{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1}};
    public static boolean IsQueenSafe(int[][] chess, int row, int col) {
        
        for( int i =0 ; i<dir.length ; i++){
            for( int d=1;d <=chess.length ; d++){
                int x = row + d * dir[i][0];
                int y = col + d * dir[i][1];
                
                if( x>=0 && y>=0 && x<chess.length && y<chess.length && chess[x][y] > 0 ) return false;
            }
        }
        return true;
    }

    public static void nqueens(int qpsf, int tq, int[][] chess) {
        // queen permutations
        //level pe queen
        //choice pe boxes
        
        if(qpsf > tq ){
            for(int i =0 ; i<chess.length ; i++ ){
                for( int j=0; j<chess.length ; j++){
                    if( chess[i][j] != 0 ) System.out.print("q"+chess[i][j]+"	");
                    else System.out.print("-	");
                }
                System.out.println();
            }
            System.out.println();
            return;
        }
        for(int i =0 ; i<chess.length ; i++ ){
            for( int j=0; j<chess.length ; j++){
                if( chess[i][j] == 0 && IsQueenSafe(chess,i,j)){
                    chess[i][j] = qpsf;
                    nqueens(qpsf+1,tq,chess);
                    chess[i][j] = 0;
                }
            }
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] chess = new int[n][n];

        nqueens(1, n, chess);
    }
}