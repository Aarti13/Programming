import java.io.*;
import java.util.*;

public class Main {
    
    public static class Pair implements Comparable<Pair> {
        int st;
        int end;
        
        Pair( int st , int end){
            this.st = st;
            this.end = end ;
        }
        
        public int compareTo(Pair other){
            if( this.st != other.st ) return this.st-other.st;
            else return this.end - other.end;

        }
    }
    public static void main(String[] args) throws Exception {
        // write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] arr = new int[n][2];

        for (int j = 0; j < n; j++) {
            String line = br.readLine();
            arr[j][0] = Integer.parseInt(line.split(" ")[0]);
            arr[j][1] = Integer.parseInt(line.split(" ")[1]);
        }

        mergeOverlappingIntervals(arr);
    }

    public static void mergeOverlappingIntervals(int[][] arr) {
        // merge overlapping intervals and print in increasing order of start time
        
        Pair[] pair = new Pair[arr.length];
        for( int i =0 ; i<arr.length ; i++ ){
            pair[i] = new Pair( arr[i][0] , arr[i][1]);
            
        }
        
        Arrays.sort(pair);
        
        Stack<Pair> st = new Stack<>();
        for( int i =0 ; i<pair.length ; i++ ){
            
            if( i == 0 ) st.push(pair[i]);
            else {
                Pair top = st.peek();
                
                if( pair[i].st > top.end ) st.push( pair[i] );
                else top.end = Math.max( top.end , pair[i].end );
                
            }
        }
        
        Stack<Pair> res = new Stack<>();
        while( st.size()>0){
            res.push(st.pop());
          
        }
        while( res.size()>0){
            Pair val = res.pop();
            System.out.println("ans:"+ val.st +" "+ val.end);
        }
    }

}